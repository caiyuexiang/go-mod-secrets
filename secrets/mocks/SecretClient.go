// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// SecretClient is an autogenerated mock type for the SecretClient type
type SecretClient struct {
	mock.Mock
}

// GetSecrets provides a mock function with given fields: subPath, keys
func (_m *SecretClient) GetSecrets(subPath string, keys ...string) (map[string]string, error) {
	_va := make([]interface{}, len(keys))
	for _i := range keys {
		_va[_i] = keys[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, subPath)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 map[string]string
	if rf, ok := ret.Get(0).(func(string, ...string) map[string]string); ok {
		r0 = rf(subPath, keys...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, ...string) error); ok {
		r1 = rf(subPath, keys...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StoreSecrets provides a mock function with given fields: subPath, _a1
func (_m *SecretClient) StoreSecrets(subPath string, _a1 map[string]string) error {
	ret := _m.Called(subPath, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, map[string]string) error); ok {
		r0 = rf(subPath, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
